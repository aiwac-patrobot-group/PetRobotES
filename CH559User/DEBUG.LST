C51 COMPILER V9.56.0.0   DEBUG                                                             01/20/2019 13:19:16 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN DEBUG.OBJ
COMPILER INVOKED BY: D:\SoftInstall\C51\C51\BIN\C51.EXE DEBUG.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User\Device;..\User\H
                    -ost;..\User;..\User\PUB;..\User\PUB\INC;..\CH559User;.\myInclude) DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.3
   5          * Date               : 2016/06/24
   6          * Description        : CH559 DEBUG Interface
   7                               (1)???0??????,?????;                        
   8          *******************************************************************************/
   9          
  10          #include <stdio.h>
  11          #include "CH559.H"
  12          
  13          #define  FREQ_SYS 12000000                                                     //????12MHz
  14          #ifndef  BUAD
  15          #define  BUAD    57600
  16          #endif
  17          
  18          /*******************************************************************************
  19          * Function Name  : CfgFsys( )
  20          * Description    : CH559?????????,????????12MHz,?????FREQ_SYS??
  21                             ??PLL_CFG?CLOCK_CFG????,????:
  22                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  23                             ??????????
  24          * Input          : None
  25          * Output         : None
  26          * Return         : None
  27          *******************************************************************************/ 
  28          void  CfgFsys( )  
  29          {
  30   1          SAFE_MOD = 0x55;                                                           //??????   ,???????????????
  31   1          SAFE_MOD = 0xAA;                                                 
  32   1      //  CLOCK_CFG |= bOSC_EN_XT;                                                   //??????                   
             -                      
  33   1      //  CLOCK_CFG &= ~bOSC_EN_INT;                                              
  34   1      //  CLOCK_CFG &= ~MASK_SYS_CK_DIV;
  35   1      //  CLOCK_CFG |= 6;                                                            //??????48MHz
  36   1      //  CLOCK_CFG |= 8;                                                            //??????36MHz
  37   1      //  CLOCK_CFG |= 10;                                                           //??????28.8MHz
  38   1      //  CLOCK_CFG |= 12;                                                           //??????24MHz
  39   1      //  CLOCK_CFG |= 16;                                                           //??????18MHz    
  40   1          SAFE_MOD = 0xFF;                                                           //??????  
  41   1      //  ??????,?????FREQ_SYS,???????????
  42   1      }
  43          
  44          /*******************************************************************************
  45          * Function Name  : mDelayus(UNIT16 n)
  46          * Description    : us????
  47          * Input          : UNIT16 n
  48          * Output         : None
  49          * Return         : None
  50          *******************************************************************************/ 
  51          void  mDelayuS( UINT16 n )  // ?uS?????
  52          {
  53   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
C51 COMPILER V9.56.0.0   DEBUG                                                             01/20/2019 13:19:16 PAGE 2   

  54   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  55   2      #ifdef  FREQ_SYS
  56   2      #if   FREQ_SYS >= 14000000
                  ++ SAFE_MOD;
              #endif
  59   2      #if   FREQ_SYS >= 16000000
                  ++ SAFE_MOD;
              #endif
  62   2      #if   FREQ_SYS >= 18000000
                  ++ SAFE_MOD;
              #endif
  65   2      #if   FREQ_SYS >= 20000000
                  ++ SAFE_MOD;
              #endif
  68   2      #if   FREQ_SYS >= 22000000
                  ++ SAFE_MOD;
              #endif
  71   2      #if   FREQ_SYS >= 24000000
                  ++ SAFE_MOD;
              #endif
  74   2      #if   FREQ_SYS >= 26000000
                  ++ SAFE_MOD;
              #endif
  77   2      #if   FREQ_SYS >= 28000000
                  ++ SAFE_MOD;
              #endif
  80   2      #if   FREQ_SYS >= 30000000
                  ++ SAFE_MOD;
              #endif
  83   2      #if   FREQ_SYS >= 32000000
                  ++ SAFE_MOD;
              #endif
  86   2      #if   FREQ_SYS >= 34000000
                  ++ SAFE_MOD;
              #endif
  89   2      #if   FREQ_SYS >= 36000000
                  ++ SAFE_MOD;
              #endif
  92   2      #if   FREQ_SYS >= 38000000
                  ++ SAFE_MOD;
              #endif
  95   2      #if   FREQ_SYS >= 40000000
                  ++ SAFE_MOD;
              #endif
  98   2      #if   FREQ_SYS >= 42000000
                  ++ SAFE_MOD;
              #endif
 101   2      #if   FREQ_SYS >= 44000000
                  ++ SAFE_MOD;
              #endif
 104   2      #if   FREQ_SYS >= 46000000
                  ++ SAFE_MOD;
              #endif
 107   2      #if   FREQ_SYS >= 48000000
                  ++ SAFE_MOD;
              #endif
 110   2      #if   FREQ_SYS >= 50000000
                  ++ SAFE_MOD;
              #endif
 113   2      #if   FREQ_SYS >= 52000000
                  ++ SAFE_MOD;
              #endif
C51 COMPILER V9.56.0.0   DEBUG                                                             01/20/2019 13:19:16 PAGE 3   

 116   2      #if   FREQ_SYS >= 54000000
                  ++ SAFE_MOD;
              #endif
 119   2      #if   FREQ_SYS >= 56000000
                  ++ SAFE_MOD;
              #endif
 122   2      #endif
 123   2          -- n;
 124   2        }
 125   1      }
 126          
 127          /*******************************************************************************
 128          * Function Name  : mDelayms(UNIT16 n)
 129          * Description    : ms????
 130          * Input          : UNIT16 n
 131          * Output         : None
 132          * Return         : None
 133          *******************************************************************************/
 134          void  mDelaymS( UINT16 n )                                                  // ?mS?????
 135          {
 136   1        while ( n ) 
 137   1        {
 138   2          mDelayuS( 1000 );
 139   2          -- n;
 140   2        }
 141   1      }                                         
 142          
 143          /*******************************************************************************
 144          * Function Name  : CH559UART0Alter()
 145          * Description    : CH559??0????,?????P0.2?P0.3
 146          * Input          : None
 147          * Output         : None
 148          * Return         : None
 149          *******************************************************************************/
 150          void CH559UART0Alter()
 151          {
 152   1          PORT_CFG |= bP0_OC;
 153   1          P0_DIR |= bTXD_;
 154   1          P0_PU |= bTXD_ | bRXD_;
 155   1          PIN_FUNC |= bUART0_PIN_X;                                                  //?????P0.2?P0.3
 156   1      }
 157          
 158          /*******************************************************************************
 159          * Function Name  : mInitSTDIO()
 160          * Description    : CH559??0???,????T1?UART0???????,?????T2
 161                             ????????
 162          * Input          : None
 163          * Output         : None
 164          * Return         : None
 165          *******************************************************************************/
 166          void  mInitSTDIO( )
 167          {
 168   1          UINT32 x;
 169   1          UINT8 x2; 
 170   1      
 171   1          SM0 = 0;
 172   1          SM1 = 1;  
 173   1        //??0????1
 174   1      
 175   1          SM2  = 0;                                                                  //???????                  
             -                                                                                         
 176   1          RCLK = 0;                                                                  //UART0????
C51 COMPILER V9.56.0.0   DEBUG                                                             01/20/2019 13:19:16 PAGE 4   

 177   1          TCLK = 0;                                                                  //UART0????
 178   1        //??Timer1????????  
 179   1        
 180   1          PCON |= SMOD;
 181   1        
 182   1        // ??? =  FREQ_SYS / 12  /x(???????? = 256 - TH1)  / 16 
 183   1        //12 : ???? = 12* ????
 184   1        //16 :??????16?
 185   1          x = 10 * FREQ_SYS / BUAD / 16;                                               //??????,??x??????       
             -                     
 186   1          x2 = x % 10;
 187   1          x /= 10;
 188   1          if ( x2 >= 5 ) x ++;                                                       //????
 189   1      
 190   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20,Timer1??8????????
 191   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1????
 192   1          TH1 = 0-x;                                                                 //12MHz??,buad/12????????? 
             -  ,??,???1???????????
 193   1          TR1 = 1;                                                                   //?????1
 194   1          TI = 1;
 195   1          REN = 1;                                                                   //??0????
 196   1      }
 197          
 198          /*******************************************************************************
 199          * Function Name  : CH559UART0RcvByte()
 200          * Description    : CH559UART0??????
 201          * Input          : None
 202          * Output         : None
 203          * Return         : SBUF
 204          *******************************************************************************/
 205          UINT8  CH559UART0RcvByte( )
 206          {
 207   1          while(RI == 0);                                                            //????,???????
 208   1          RI = 0;
 209   1          return SBUF;
 210   1      }
 211          
 212          /*******************************************************************************
 213          * Function Name  : CH559UART0SendByte(UINT8 SendDat)
 214          * Description    : CH559UART0??????
 215          * Input          : UINT8 SendDat;??????
 216          * Output         : None
 217          * Return         : None
 218          *******************************************************************************/
 219          void CH559UART0SendByte(UINT8 SendDat)
 220          {
 221   1        SBUF = SendDat;                                                              //????,?????????2???,?????TI
             -=0
 222   1        while(TI ==0);
 223   1        TI = 1;
 224   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.56.0.0   DEBUG                                                             01/20/2019 13:19:16 PAGE 5   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
